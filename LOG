Parsing essai.ka...
done
+ simulation parameters
+ Sanity checks
CONVERT DELTA -1 -> 1 
CONVERT DELTA 1 -> -1 
CREATED COUNTERS A 
  CREATED SITES x  -> -3 
   CREATED SITES x__inverted  -> 3 
 CREATED COUNTERS A 
  CREATED SITES x  -> -3 
   CREATED SITES x__inverted  -> 3 
 + Compiling...
+ Building initial simulation conditions...
	 -variable declarations
_____(1)
A(x{=-2H})
_____(1)
A(x{=-1H})
_____(1)
A(x{=0H})
_____(1)
A(x{=1H})
_____(1)
A(x{=2H})
_____(1)
A(x{>=-2H})
_____(1)
A(x{>=-1H})
_____(1)
A(x{>=0H})
_____(1)
A(x{>=1H})
_____(1)
A(x{>=2H})
_____(1)
A(x__inverted{>=2H})
_____(1)
A(x__inverted{>=1H})
_____(1)
A(x__inverted{>=0H})
_____(1)
A(x__inverted{>=-1H})
_____(1)
A(x__inverted{>=-2H})
	 -rules
_____(1)
A(x{=1} x__inverted{=2})+
_____(1)
A(x{>=-3H/+=1} x__inverted{>=-1H/+=1})
_____(1)
A(x{>=-1H/+=2} x__inverted{>=-2H/+=1})
_____(1)
A(x[#] x__inverted{>=0H})-
_____(1)
A(x{>=-3H} x__inverted{>=-1H})
_____(1)
A(x{>=-1H})
	 -interventions
_____(1)
A(x__inverted{>=4H})
_____(1)
A(x{>=3H})
	 -observables
	 -update_domain construction
	 27 (sub)observables 23 navigation steps
	 -initial conditions
_____(1)
A(x{=1} x__inverted{=2})+
+ Self seeding...
File './data.csv' already exists do you want to erase (y/N)?
+ Building initial state (8 agents)
Done
+ Command line to rerun is: 'KaSim' 'essai.ka' '--compile' -seed 1017993374
Environment:
  
  %agent: A(x{=-3/+=2} x__inverted{-=-2/=3/+=3})
  
  %var:/*0*/ '=-2' |A(x{=-2})|
  %var:/*1*/ '=-1' |A(x{=-1})|
  %var:/*2*/ '=0' |A(x{=0})|
  %var:/*3*/ '=1' |A(x{=1})|
  %var:/*4*/ '=2' |A(x{=2})|
  %var:/*5*/ '>=-2' |A(x{>=-2})|
  %var:/*6*/ '>=-1' |A(x{>=-1})|
  %var:/*7*/ '>=0' |A(x{>=0})|
  %var:/*8*/ '>=1' |A(x{>=1})|
  %var:/*9*/ '>=2' |A(x{>=2})|
  %var:/*10*/ '<=-2' |A(x__inverted{>=2})|
  %var:/*11*/ '<=-1' |A(x__inverted{>=1})|
  %var:/*12*/ '<=0' |A(x__inverted{>=0})|
  %var:/*13*/ '<=1' |A(x__inverted{>=-1})|
  %var:/*14*/ '<=2' |A(x__inverted{>=-2})|
  %plot: [T]
  %plot: '=-2'
  %plot: '=-1'
  %plot: '=0'
  %plot: '=1'
  %plot: '=2'
  %plot: '>=-2'
  %plot: '>=-1'
  %plot: '>=0'
  %plot: '>=1'
  %plot: '>=2'
  %plot: '<=-2'
  %plot: '<=-1'
  %plot: '<=0'
  %plot: '<=1'
  %plot: '<=2'
  
  A(x{=1} x__inverted{=2})+ @ 100
  A(x{>=-3H/+=1} x__inverted{>=-1H/+=1}) @ 2
  A(x{>=-1H/+=2} x__inverted{>=-2H/+=1}) @ 1
  A(x[#] x__inverted{>=0H})- @ 0.1
  A(x{>=-3H} x__inverted{>=-1H}) @ 2
  A(x{>=-1H}) @ 1
  
  /*0*/%mod: (|A(x__inverted{>=4})| = 1) do $PRINTF ""; $PRINTF "Counter x__inverted of agent A reached maximum"; $STOP "counter_perturbation.ka"; repeat [false]
  /*1*/%mod: (|A(x{>=3})| = 1) do $PRINTF ""; $PRINTF "Counter x of agent A reached maximum"; $STOP "counter_perturbation.ka"; repeat [false]
  Rules:
    0: (ast: 1)  -- 
      ++ A/*ν 0*/, __counter_agent/*ν 1*/,
         __counter_agent/*ν 1*/.a = A/*ν 0*/.x,
         __counter_agent/*ν 1*/.b = ⊥, __counter_agent/*ν 2*/,
         __counter_agent/*ν 2*/.a = A/*ν 0*/.x__inverted,
         __counter_agent/*ν 3*/,
         __counter_agent/*ν 3*/.a = __counter_agent/*ν 2*/.b,
         __counter_agent/*ν 4*/,
         __counter_agent/*ν 4*/.a = __counter_agent/*ν 3*/.b,
         __counter_agent/*ν 5*/,
         __counter_agent/*ν 5*/.a = __counter_agent/*ν 4*/.b,
         __counter_agent/*ν 6*/,
         __counter_agent/*ν 6*/.a = __counter_agent/*ν 5*/.b,
         __counter_agent/*ν 7*/,
         __counter_agent/*ν 7*/.a = __counter_agent/*ν 6*/.b,
         __counter_agent/*ν 7*/.b = ⊥
      @100
    1: (ast: 2) 0: /*cc16*/ A/*1*/(x{>=-3} x__inverted{>=-1})
      -- __counter_agent/*4*//*0*/.a = A/*1*//*0*/.x,
         __counter_agent/*3*//*0*/.a = __counter_agent/*2*//*0*/.b,
         __counter_agent/*2*//*0*/.a = A/*1*//*0*/.x__inverted,
         __counter_agent/*2*//*0*/
      ++ A/*1*//*0*/.x__inverted = A/*1*//*0*/.x, __counter_agent/*ν 0*/,
         __counter_agent/*ν 0*/.a = __counter_agent/*3*//*0*/.a,
         __counter_agent/*ν 0*/.b = __counter_agent/*4*//*0*/.a
      @2
    2: (ast: 3) 0: /*cc17*/ A/*1*/(x{>=-1} x__inverted{>=-2})
      -- __counter_agent/*4*//*0*/.a = __counter_agent/*3*//*0*/.b,
         __counter_agent/*3*//*0*/.a = A/*1*//*0*/.x,
         __counter_agent/*3*//*0*/,
         __counter_agent/*2*//*0*/.a = A/*1*//*0*/.x__inverted
      ++ __counter_agent/*4*//*0*/.a = A/*1*//*0*/.x,
         __counter_agent/*ν 0*/,
         __counter_agent/*ν 0*/.a = A/*1*//*0*/.x__inverted,
         __counter_agent/*ν 0*/.b = __counter_agent/*2*//*0*/.a
      @1
    3: (ast: 4) 0: /*cc13*/ A/*1*/(x__inverted{>=0})
      -- __counter_agent/*4*//*0*/.b = ???, __counter_agent/*4*//*0*/,
         __counter_agent/*3*//*0*/,
         __counter_agent/*2*//*0*/.a = A/*1*//*0*/.x__inverted,
         __counter_agent/*2*//*0*/, A/*1*//*0*/.x = ???, A/*1*//*0*/
      ++  @0.1
    4: (ast: 5) 0: /*cc16*/ A/*1*/(x{>=-3} x__inverted{>=-1}) --  ++  @2
    5: (ast: 6) 0: /*cc7*/ A/*1*/(x{>=-1}) --  ++  @1
Polymers:
  
Domain:
  /*cc0*/  -> ()
  /*cc1*/ A/*1*/(x{=-2}) [algebraic variable [0]] -> ()
  /*cc2*/ A/*1*/(x{=-1}) [algebraic variable [1]] -> ()
  /*cc3*/ A/*1*/(x{=0}) [algebraic variable [2]] -> ()
  /*cc4*/ A/*1*/(x{=1}) [algebraic variable [3]] -> ()
  /*cc5*/ A/*1*/(x{=2}) [algebraic variable [4]] -> ()
  /*cc6*/ A/*1*/(x{>=-2}) [algebraic variable [5]]
    -> (-3(b[a.!__counter_agent-4])->() 7 -3(b[.])->() 1)
  /*cc7*/ A/*1*/(x{>=-1}) [algebraic variable [6] rate_of_rule [5]]
    -> (-4(b[a.!__counter_agent-5])->() 8 -4(b[.])->() 2)
  /*cc8*/ A/*1*/(x{>=0}) [algebraic variable [7]]
    -> (-5(b[a.!__counter_agent-6])->() 9 -5(b[.])->() 3)
  /*cc9*/ A/*1*/(x{>=1}) [algebraic variable [8]]
    -> (-6(b[a.!__counter_agent-7])->() 10 -6(b[.])->() 4)
  /*cc10*/ A/*1*/(x{>=2}) [algebraic variable [9]]
    -> (-7(b[a.!__counter_agent-8])->() 19 -7(b[.])->() 5)
  /*cc11*/ A/*1*/(x__inverted{>=2}) [algebraic variable [10]]
    -> (-6(b[a.!__counter_agent-7])->-7(b[a.!__counter_agent-8])->() 18)
  /*cc12*/ A/*1*/(x__inverted{>=1}) [algebraic variable [11]]
    -> (-5(b[a.!__counter_agent-6])->() 11)
  /*cc13*/ A/*1*/(x__inverted{>=0})
    [algebraic variable [12] rate_of_rule [3]]
    -> (-4(b[a.!__counter_agent-5])->() 12)
  /*cc14*/ A/*1*/(x__inverted{>=-1}) [algebraic variable [13]]
    -> (-3(b[a.!__counter_agent-4])->() 13
       -1(x[a.!__counter_agent-4])->() 16)
  /*cc15*/ A/*1*/(x__inverted{>=-2}) [algebraic variable [14]]
    -> (-2(b[a.!__counter_agent-3])->() 14
       -1(x[a.!__counter_agent-3])->() 27)
  /*cc16*/ A/*1*/(x{>=-3} x__inverted{>=-1})
    [rate_of_rule [1] rate_of_rule [4]] -> ()
  /*cc17*/ A/*1*/(x{>=-1} x__inverted{>=-2}) [rate_of_rule [2]] -> ()
  /*cc18*/ A/*1*/(x__inverted{>=4}) [intervention [0]] -> ()
  /*cc19*/ A/*1*/(x{>=3}) [intervention [1]] -> ()
  /*cc20*/  -> ()
  /*cc21*/  -> ()
  /*cc22*/  -> ()
  /*cc23*/ A/*1*/(x{>=-3})
    -> (-1(x__inverted[a.!__counter_agent-3])->(2->3, 3->2) 27
       -2(b[a.!__counter_agent-3])->() 6)
  /*cc24*/  -> ()
  /*cc25*/ A/*1*/(x[.]) -> ()
  /*cc26*/ A/*1*/(x__inverted[.]) -> ()
  /*cc27*/ A/*1*/(x{>=-3} x__inverted{>=-2})
    -> (-3(b[a.!__counter_agent-4])->-4(b[a.!__counter_agent-5])->() 17
       -2(b[a.!__counter_agent-4])->(3->4, 4->3) 16)
Intial graph;
  %init: 1 A(x{=0})
  
