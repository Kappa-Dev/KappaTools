function main=main()
% command line: 
%      'KaDE' 'erre.ka' '-syntax' '4' '-d' 'output' '-l' '1' '-p''0.01'
%% THINGS THAT ARE KNOWN FROM KAPPA FILE AND KaSim OPTIONS:
%% 
%% init - the initial abundances of each species and token
%% tinit - the initial simulation time (likely 0)
%% tend - the final simulation time 
%% initialstep - initial time step at the beginning of numerical integration
%% maxstep - maximal time step for numerical integration
%% reltol - relative error tolerance;
%% abstol - absolute error tolerance;
%% period - the time period between points to return
%%
%% variables (init(i),y(i)) denote numbers of embeddings 
%% rule rates are corrected by the number of automorphisms in the lhs of rules


tinit=0;
tend=1;
initialstep=1e-05;
maxstep=0.02;
reltol=0.001;
abstol=0.001;
period=0.01;
nonnegative=false;

global nodevar
nodevar=8;
global max_stoc_coef
max_stoc_coef=0;
nvar=4;
nobs=3;
nrules=12;

global var
var=zeros(nvar,1);
global init
init=sparse(nodevar,1);
global k
global kd
global kun
global kdun
global stoc

stoc=zeros(nrules,max_stoc_coef);
k=zeros(nrules,1);
kd=zeros(nrules,1);
kun=zeros(nrules,1);
kdun=zeros(nrules,1);
global jacvar
jacvar=sparse(nvar,nodevar);
global jack
global jackd
global jackun
global jackund
global jacstoc

jack=zeros(nrules,nodevar);
jackd=zeros(nrules,nodevar);
jackun=zeros(nrules,nodevar);
jackund=zeros(nrules,nodevar);

t = 0.000000;

init(8)=t;
init(2)=10; % E(r[.],s[.])
init(1)=100; % R(e[.],r[.])
var(2)=init(1)+init(3)+init(4); % monomers
var(1)=(init(7)+2*init(6)+init(5))/2; % dimmers

k(1)=1; % E(r[.],s[.]), R(e[.]) -> E(r[1],s[.]), R(e[1])
k(2)=1; % E(r[.],s[.]), R(e[.]) -> E(r[.],s[1]), R(e[1])
k(3)=2; % R(e[_],r[.]) -> R(e[.],r[.])
k(4)=3; % R(e[_],r[.]), R(e[_],r[.]) -> R(e[_],r[1]), R(e[_],r[1])
k(5)=4; % R(r[_]) -> .
k(6)=5; % R(r[_]) -> R(r[.])

uiIsOctave = false;
uiIsMatlab = false;
LIC = license('inuse');
for elem = 1:numel(LIC)
    envStr = LIC(elem).feature
    if strcmpi(envStr,'octave')
       LICname=envStr;
       uiIsOctave = true;
       break
    end
    if strcmpi(envStr,'matlab')
       LICname=envStr
       uiIsMatlab = true;
       break
    end
end


if nonnegative 
   options = odeset('RelTol', reltol, ...
                    'AbsTol', abstol, ...
                    'InitialStep', initialstep, ...
                    'MaxStep', maxstep, ...
                    'Jacobian', @ode_jacobian, ...
                   'NonNegative', [1:1:7]);
else
   options = odeset('RelTol', reltol, ...
                    'AbsTol', abstol, ...
                    'InitialStep', initialstep, ...
                    'MaxStep', maxstep, ...
                    'Jacobian', @ode_jacobian);
end


if nonnegative
   if uiIsMatlab
      soln =  ode15s(@ode_aux,[tinit tend],ode_init(),options);
      soln.y=soln.y';
      vt = soln.x;
      vy = soln.y;
   elseif uiIsOctave
      [vt,vy] = ode45(@ode_aux,[tinit tend],ode_init(),options);
   end
else
   if uiIsMatlab
      soln =  ode15s(@ode_aux,[tinit tend],ode_init(),options);
      soln.y=soln.y';
      vt = soln.x;
      vy = soln.y;
   elseif uiIsOctave
      soln = ode45(@ode_aux,[tinit tend],ode_init(),options);
      vt = soln.x;
      vy = soln.y;
   end
end;


nrows = length(vt);

tmp = zeros(nodevar,1);

n_points = floor ((tend-tinit)/period)+1;
t = linspace(tinit, tend, n_points);
obs = zeros(nrows,nobs);

for j=1:nrows
    for i=1:nodevar
        z(i)=vy(i,j);
    end
    h=ode_obs(z);
    for i=1:nobs
        obs(j,i)=h(i);
    end
end
if nobs==1
   y = interp1(vt, obs, t, 'pchip')';
else
   y = interp1(vt, obs, t, 'pchip');
end


filename = 'data.csv';
fid = fopen (filename,'w');
fprintf(fid,'# KaDE erre.ka -syntax 4 -d output -l 1 -p 0.01\n')
fprintf(fid,'# ')
fprintf(fid,'[T] ')
fprintf(fid,'dimmers ')
fprintf(fid,'monomers ')
fprintf(fid,'\n')
for j=1:n_points
    for i=1:nobs
        fprintf(fid,'%f ',y(j,i));
    end
    fprintf(fid,'\n');
end
fclose(fid);


end



function Init=ode_init()

global nodevar
global init
Init=zeros(nodevar,1);

Init(1) = init(1); % R(e[.],r[.])
Init(2) = init(2); % E(r[.],s[.])
Init(3) = init(3); % R(e[1],r[.]), E(r[1],s[.])
Init(4) = init(4); % R(e[1],r[.]), E(r[.],s[1])
Init(5) = init(5); % R(e[1],r[2]), R(e[3],r[2]), E(r[.],s[1]), E(r[.],s[3])
Init(6) = init(6); % R(e[1],r[2]), R(e[3],r[2]), E(r[.],s[1]), E(r[3],s[.])
Init(7) = init(7); % R(e[1],r[2]), R(e[3],r[2]), E(r[1],s[.]), E(r[3],s[.])
Init(8) = init(8); % t
end


function dydt=ode_aux(t,y)

global nodevar
global max_stoc_coef
global var
global k
global kd
global kun
global kdun
global stoc

var(2)=y(1)+y(3)+y(4); % monomers
var(1)=(y(7)+2*y(6)+y(5))/2; % dimmers


dydt=zeros(nodevar,1);

% rule    : R(r[_]) -> R(r[.])
% reaction: R(e[1],r[2]).R(e[3],r[2]).E(r[.],s[1]).E(r[3],s[.]) -> R(e[1],r[.]).E(r[.],s[1]) + R(e[1],r[.]).E(r[1],s[.])

dydt(6)=dydt(6)-k(6)*y(6);
dydt(3)=dydt(3)+k(6)*y(6);
dydt(4)=dydt(4)+k(6)*y(6);

% rule    : R(r[_]) -> .
% reaction: R(e[1],r[2]).R(e[3],r[2]).E(r[.],s[1]).E(r[3],s[.]) -> E(r[.],s[.]) + R(e[1],r[.]).E(r[1],s[.])

dydt(6)=dydt(6)-k(5)*y(6);
dydt(3)=dydt(3)+k(5)*y(6);
dydt(2)=dydt(2)+k(5)*y(6);

% rule    : R(r[_]) -> R(r[.])
% reaction: R(e[1],r[2]).R(e[3],r[2]).E(r[.],s[1]).E(r[3],s[.]) -> R(e[1],r[.]).E(r[.],s[1]) + R(e[1],r[.]).E(r[1],s[.])

dydt(6)=dydt(6)-k(6)*y(6);
dydt(3)=dydt(3)+k(6)*y(6);
dydt(4)=dydt(4)+k(6)*y(6);

% rule    : R(r[_]) -> .
% reaction: R(e[1],r[2]).R(e[3],r[2]).E(r[.],s[1]).E(r[3],s[.]) -> E(r[.],s[.]) + R(e[1],r[.]).E(r[.],s[1])

dydt(6)=dydt(6)-k(5)*y(6);
dydt(4)=dydt(4)+k(5)*y(6);
dydt(2)=dydt(2)+k(5)*y(6);

% rule    : R(r[_]) -> R(r[.])
% reaction: R(e[1],r[2]).R(e[3],r[2]).E(r[1],s[.]).E(r[3],s[.]) -> R(e[1],r[.]).E(r[1],s[.]) + R(e[1],r[.]).E(r[1],s[.])

dydt(7)=dydt(7)-2*k(6)*y(7)/2;
dydt(3)=dydt(3)+k(6)*y(7)/2;
dydt(3)=dydt(3)+k(6)*y(7)/2;

% rule    : R(r[_]) -> .
% reaction: R(e[1],r[2]).R(e[3],r[2]).E(r[1],s[.]).E(r[3],s[.]) -> E(r[.],s[.]) + R(e[1],r[.]).E(r[1],s[.])

dydt(7)=dydt(7)-2*k(5)*y(7)/2;
dydt(3)=dydt(3)+k(5)*y(7)/2;
dydt(2)=dydt(2)+k(5)*y(7)/2;

% rule    : R(r[_]) -> R(r[.])
% reaction: R(e[1],r[2]).R(e[3],r[2]).E(r[1],s[.]).E(r[3],s[.]) -> R(e[1],r[.]).E(r[1],s[.]) + R(e[1],r[.]).E(r[1],s[.])

dydt(7)=dydt(7)-2*k(6)*y(7)/2;
dydt(3)=dydt(3)+k(6)*y(7)/2;
dydt(3)=dydt(3)+k(6)*y(7)/2;

% rule    : R(r[_]) -> .
% reaction: R(e[1],r[2]).R(e[3],r[2]).E(r[1],s[.]).E(r[3],s[.]) -> E(r[.],s[.]) + R(e[1],r[.]).E(r[1],s[.])

dydt(7)=dydt(7)-2*k(5)*y(7)/2;
dydt(3)=dydt(3)+k(5)*y(7)/2;
dydt(2)=dydt(2)+k(5)*y(7)/2;

% rule    : R(e[_],r[.]), R(e[_],r[.]) -> R(e[_],r[1]), R(e[_],r[1])
% reaction: R(e[1],r[.]).E(r[1],s[.]) + R(e[1],r[.]).E(r[1],s[.]) -> R(e[1],r[2]).R(e[3],r[2]).E(r[1],s[.]).E(r[3],s[.])

dydt(3)=dydt(3)-1/2*k(4)*y(3)*y(3);
dydt(3)=dydt(3)-1/2*k(4)*y(3)*y(3);
dydt(7)=dydt(7)+2/2*k(4)*y(3)*y(3);

% rule    : R(e[_],r[.]), R(e[_],r[.]) -> R(e[_],r[1]), R(e[_],r[1])
% reaction: R(e[1],r[.]).E(r[1],s[.]) + R(e[1],r[.]).E(r[1],s[.]) -> R(e[1],r[2]).R(e[3],r[2]).E(r[1],s[.]).E(r[3],s[.])

dydt(3)=dydt(3)-1/2*k(4)*y(3)*y(3);
dydt(3)=dydt(3)-1/2*k(4)*y(3)*y(3);
dydt(7)=dydt(7)+2/2*k(4)*y(3)*y(3);

% rule    : R(e[_],r[.]), R(e[_],r[.]) -> R(e[_],r[1]), R(e[_],r[1])
% reaction: R(e[1],r[.]).E(r[1],s[.]) + R(e[1],r[.]).E(r[1],s[.]) -> R(e[1],r[2]).R(e[3],r[2]).E(r[1],s[.]).E(r[3],s[.])

dydt(3)=dydt(3)-1/2*k(4)*y(3)*y(3);
dydt(3)=dydt(3)-1/2*k(4)*y(3)*y(3);
dydt(7)=dydt(7)+2/2*k(4)*y(3)*y(3);

% rule    : R(e[_],r[.]), R(e[_],r[.]) -> R(e[_],r[1]), R(e[_],r[1])
% reaction: R(e[1],r[.]).E(r[.],s[1]) + R(e[1],r[.]).E(r[1],s[.]) -> R(e[1],r[2]).R(e[3],r[2]).E(r[.],s[1]).E(r[3],s[.])

dydt(3)=dydt(3)-1/2*k(4)*y(3)*y(4);
dydt(4)=dydt(4)-1/2*k(4)*y(3)*y(4);
dydt(6)=dydt(6)+1/2*k(4)*y(3)*y(4);

% rule    : R(e[_],r[.]), R(e[_],r[.]) -> R(e[_],r[1]), R(e[_],r[1])
% reaction: R(e[1],r[.]).E(r[.],s[1]) + R(e[1],r[.]).E(r[1],s[.]) -> R(e[1],r[2]).R(e[3],r[2]).E(r[.],s[1]).E(r[3],s[.])

dydt(3)=dydt(3)-1/2*k(4)*y(3)*y(4);
dydt(4)=dydt(4)-1/2*k(4)*y(3)*y(4);
dydt(6)=dydt(6)+1/2*k(4)*y(3)*y(4);

% rule    : R(e[_],r[.]), R(e[_],r[.]) -> R(e[_],r[1]), R(e[_],r[1])
% reaction: R(e[1],r[.]).E(r[1],s[.]) + R(e[1],r[.]).E(r[.],s[1]) -> R(e[1],r[2]).R(e[3],r[2]).E(r[.],s[1]).E(r[3],s[.])

dydt(4)=dydt(4)-1/2*k(4)*y(4)*y(3);
dydt(3)=dydt(3)-1/2*k(4)*y(4)*y(3);
dydt(6)=dydt(6)+1/2*k(4)*y(4)*y(3);

% rule    : R(e[_],r[.]), R(e[_],r[.]) -> R(e[_],r[1]), R(e[_],r[1])
% reaction: R(e[1],r[.]).E(r[1],s[.]) + R(e[1],r[.]).E(r[.],s[1]) -> R(e[1],r[2]).R(e[3],r[2]).E(r[.],s[1]).E(r[3],s[.])

dydt(4)=dydt(4)-1/2*k(4)*y(4)*y(3);
dydt(3)=dydt(3)-1/2*k(4)*y(4)*y(3);
dydt(6)=dydt(6)+1/2*k(4)*y(4)*y(3);

% rule    : R(e[_],r[.]) -> R(e[.],r[.])
% reaction: R(e[1],r[.]).E(r[1],s[.]) -> E(r[.],s[.]) + R(e[.],r[.])

dydt(3)=dydt(3)-k(3)*y(3);
dydt(1)=dydt(1)+k(3)*y(3);
dydt(2)=dydt(2)+k(3)*y(3);

% rule    : R(r[_]) -> R(r[.])
% reaction: R(e[1],r[2]).R(e[3],r[2]).E(r[.],s[1]).E(r[.],s[3]) -> R(e[1],r[.]).E(r[.],s[1]) + R(e[1],r[.]).E(r[.],s[1])

dydt(5)=dydt(5)-2*k(6)*y(5)/2;
dydt(4)=dydt(4)+k(6)*y(5)/2;
dydt(4)=dydt(4)+k(6)*y(5)/2;

% rule    : R(r[_]) -> .
% reaction: R(e[1],r[2]).R(e[3],r[2]).E(r[.],s[1]).E(r[.],s[3]) -> E(r[.],s[.]) + R(e[1],r[.]).E(r[.],s[1])

dydt(5)=dydt(5)-2*k(5)*y(5)/2;
dydt(4)=dydt(4)+k(5)*y(5)/2;
dydt(2)=dydt(2)+k(5)*y(5)/2;

% rule    : R(r[_]) -> R(r[.])
% reaction: R(e[1],r[2]).R(e[3],r[2]).E(r[.],s[1]).E(r[.],s[3]) -> R(e[1],r[.]).E(r[.],s[1]) + R(e[1],r[.]).E(r[.],s[1])

dydt(5)=dydt(5)-2*k(6)*y(5)/2;
dydt(4)=dydt(4)+k(6)*y(5)/2;
dydt(4)=dydt(4)+k(6)*y(5)/2;

% rule    : R(r[_]) -> .
% reaction: R(e[1],r[2]).R(e[3],r[2]).E(r[.],s[1]).E(r[.],s[3]) -> E(r[.],s[.]) + R(e[1],r[.]).E(r[.],s[1])

dydt(5)=dydt(5)-2*k(5)*y(5)/2;
dydt(4)=dydt(4)+k(5)*y(5)/2;
dydt(2)=dydt(2)+k(5)*y(5)/2;

% rule    : R(e[_],r[.]), R(e[_],r[.]) -> R(e[_],r[1]), R(e[_],r[1])
% reaction: R(e[1],r[.]).E(r[.],s[1]) + R(e[1],r[.]).E(r[.],s[1]) -> R(e[1],r[2]).R(e[3],r[2]).E(r[.],s[1]).E(r[.],s[3])

dydt(4)=dydt(4)-1/2*k(4)*y(4)*y(4);
dydt(4)=dydt(4)-1/2*k(4)*y(4)*y(4);
dydt(5)=dydt(5)+2/2*k(4)*y(4)*y(4);

% rule    : R(e[_],r[.]) -> R(e[.],r[.])
% reaction: R(e[1],r[.]).E(r[.],s[1]) -> E(r[.],s[.]) + R(e[.],r[.])

dydt(4)=dydt(4)-k(3)*y(4);
dydt(1)=dydt(1)+k(3)*y(4);
dydt(2)=dydt(2)+k(3)*y(4);

% rule    : E(r[.],s[.]), R(e[.]) -> E(r[.],s[1]), R(e[1])
% reaction: E(r[.],s[.]) + R(e[.],r[.]) -> R(e[1],r[.]).E(r[.],s[1])

dydt(1)=dydt(1)-k(2)*y(1)*y(2);
dydt(2)=dydt(2)-k(2)*y(1)*y(2);
dydt(4)=dydt(4)+k(2)*y(1)*y(2);

% rule    : E(r[.],s[.]), R(e[.]) -> E(r[1],s[.]), R(e[1])
% reaction: E(r[.],s[.]) + R(e[.],r[.]) -> R(e[1],r[.]).E(r[1],s[.])

dydt(1)=dydt(1)-k(1)*y(1)*y(2);
dydt(2)=dydt(2)-k(1)*y(1)*y(2);
dydt(3)=dydt(3)+k(1)*y(1)*y(2);
dydt(8)=1;

end


function jac=ode_jacobian(t,y)

global nodevar
global max_stoc_coef
global jacvar
global var
global k
global kd
global kun
global kdun
global stoc

global jack
global jackd
global jackun
global jackund
global jacstoc

var(2)=y(1)+y(3)+y(4); % monomers
var(1)=(y(7)+2*y(6)+y(5))/2; % dimmers

jacvar(2,1)=1;
jacvar(2,3)=1;
jacvar(2,4)=1;
jacvar(1,5)=2/4;
jacvar(1,6)=1;
jacvar(1,7)=2/4;


jac=sparse(nodevar,nodevar);

% rule    : R(r[_]) -> R(r[.])
% reaction: R(e[1],r[2]).R(e[3],r[2]).E(r[.],s[1]).E(r[3],s[.]) -> R(e[1],r[.]).E(r[.],s[1]) + R(e[1],r[.]).E(r[1],s[.])

jac(6,6)=jac(6,6)-k(6);
jac(3,6)=jac(3,6)+k(6);
jac(4,6)=jac(4,6)+k(6);

% rule    : R(r[_]) -> .
% reaction: R(e[1],r[2]).R(e[3],r[2]).E(r[.],s[1]).E(r[3],s[.]) -> E(r[.],s[.]) + R(e[1],r[.]).E(r[1],s[.])

jac(6,6)=jac(6,6)-k(5);
jac(3,6)=jac(3,6)+k(5);
jac(2,6)=jac(2,6)+k(5);

% rule    : R(r[_]) -> R(r[.])
% reaction: R(e[1],r[2]).R(e[3],r[2]).E(r[.],s[1]).E(r[3],s[.]) -> R(e[1],r[.]).E(r[.],s[1]) + R(e[1],r[.]).E(r[1],s[.])

jac(6,6)=jac(6,6)-k(6);
jac(3,6)=jac(3,6)+k(6);
jac(4,6)=jac(4,6)+k(6);

% rule    : R(r[_]) -> .
% reaction: R(e[1],r[2]).R(e[3],r[2]).E(r[.],s[1]).E(r[3],s[.]) -> E(r[.],s[.]) + R(e[1],r[.]).E(r[.],s[1])

jac(6,6)=jac(6,6)-k(5);
jac(4,6)=jac(4,6)+k(5);
jac(2,6)=jac(2,6)+k(5);

% rule    : R(r[_]) -> R(r[.])
% reaction: R(e[1],r[2]).R(e[3],r[2]).E(r[1],s[.]).E(r[3],s[.]) -> R(e[1],r[.]).E(r[1],s[.]) + R(e[1],r[.]).E(r[1],s[.])

jac(7,7)=jac(7,7)-2*k(6)/2;
jac(3,7)=jac(3,7)+k(6)/2;
jac(3,7)=jac(3,7)+k(6)/2;

% rule    : R(r[_]) -> .
% reaction: R(e[1],r[2]).R(e[3],r[2]).E(r[1],s[.]).E(r[3],s[.]) -> E(r[.],s[.]) + R(e[1],r[.]).E(r[1],s[.])

jac(7,7)=jac(7,7)-2*k(5)/2;
jac(3,7)=jac(3,7)+k(5)/2;
jac(2,7)=jac(2,7)+k(5)/2;

% rule    : R(r[_]) -> R(r[.])
% reaction: R(e[1],r[2]).R(e[3],r[2]).E(r[1],s[.]).E(r[3],s[.]) -> R(e[1],r[.]).E(r[1],s[.]) + R(e[1],r[.]).E(r[1],s[.])

jac(7,7)=jac(7,7)-2*k(6)/2;
jac(3,7)=jac(3,7)+k(6)/2;
jac(3,7)=jac(3,7)+k(6)/2;

% rule    : R(r[_]) -> .
% reaction: R(e[1],r[2]).R(e[3],r[2]).E(r[1],s[.]).E(r[3],s[.]) -> E(r[.],s[.]) + R(e[1],r[.]).E(r[1],s[.])

jac(7,7)=jac(7,7)-2*k(5)/2;
jac(3,7)=jac(3,7)+k(5)/2;
jac(2,7)=jac(2,7)+k(5)/2;

% rule    : R(e[_],r[.]), R(e[_],r[.]) -> R(e[_],r[1]), R(e[_],r[1])
% reaction: R(e[1],r[.]).E(r[1],s[.]) + R(e[1],r[.]).E(r[1],s[.]) -> R(e[1],r[2]).R(e[3],r[2]).E(r[1],s[.]).E(r[3],s[.])

jac(3,3)=jac(3,3)-1/2*k(4)*y(3);
jac(3,3)=jac(3,3)-1/2*k(4)*y(3);
jac(3,3)=jac(3,3)-1/2*k(4)*y(3);
jac(3,3)=jac(3,3)-1/2*k(4)*y(3);
jac(7,3)=jac(7,3)+2/2*k(4)*y(3);
jac(7,3)=jac(7,3)+2/2*k(4)*y(3);

% rule    : R(e[_],r[.]), R(e[_],r[.]) -> R(e[_],r[1]), R(e[_],r[1])
% reaction: R(e[1],r[.]).E(r[1],s[.]) + R(e[1],r[.]).E(r[1],s[.]) -> R(e[1],r[2]).R(e[3],r[2]).E(r[1],s[.]).E(r[3],s[.])

jac(3,3)=jac(3,3)-1/2*k(4)*y(3);
jac(3,3)=jac(3,3)-1/2*k(4)*y(3);
jac(3,3)=jac(3,3)-1/2*k(4)*y(3);
jac(3,3)=jac(3,3)-1/2*k(4)*y(3);
jac(7,3)=jac(7,3)+2/2*k(4)*y(3);
jac(7,3)=jac(7,3)+2/2*k(4)*y(3);

% rule    : R(e[_],r[.]), R(e[_],r[.]) -> R(e[_],r[1]), R(e[_],r[1])
% reaction: R(e[1],r[.]).E(r[1],s[.]) + R(e[1],r[.]).E(r[1],s[.]) -> R(e[1],r[2]).R(e[3],r[2]).E(r[1],s[.]).E(r[3],s[.])

jac(3,3)=jac(3,3)-1/2*k(4)*y(3);
jac(3,3)=jac(3,3)-1/2*k(4)*y(3);
jac(3,3)=jac(3,3)-1/2*k(4)*y(3);
jac(3,3)=jac(3,3)-1/2*k(4)*y(3);
jac(7,3)=jac(7,3)+2/2*k(4)*y(3);
jac(7,3)=jac(7,3)+2/2*k(4)*y(3);

% rule    : R(e[_],r[.]), R(e[_],r[.]) -> R(e[_],r[1]), R(e[_],r[1])
% reaction: R(e[1],r[.]).E(r[.],s[1]) + R(e[1],r[.]).E(r[1],s[.]) -> R(e[1],r[2]).R(e[3],r[2]).E(r[.],s[1]).E(r[3],s[.])

jac(3,3)=jac(3,3)-1/2*k(4)*y(4);
jac(3,4)=jac(3,4)-1/2*k(4)*y(3);
jac(4,3)=jac(4,3)-1/2*k(4)*y(4);
jac(4,4)=jac(4,4)-1/2*k(4)*y(3);
jac(6,3)=jac(6,3)+1/2*k(4)*y(4);
jac(6,4)=jac(6,4)+1/2*k(4)*y(3);

% rule    : R(e[_],r[.]), R(e[_],r[.]) -> R(e[_],r[1]), R(e[_],r[1])
% reaction: R(e[1],r[.]).E(r[.],s[1]) + R(e[1],r[.]).E(r[1],s[.]) -> R(e[1],r[2]).R(e[3],r[2]).E(r[.],s[1]).E(r[3],s[.])

jac(3,3)=jac(3,3)-1/2*k(4)*y(4);
jac(3,4)=jac(3,4)-1/2*k(4)*y(3);
jac(4,3)=jac(4,3)-1/2*k(4)*y(4);
jac(4,4)=jac(4,4)-1/2*k(4)*y(3);
jac(6,3)=jac(6,3)+1/2*k(4)*y(4);
jac(6,4)=jac(6,4)+1/2*k(4)*y(3);

% rule    : R(e[_],r[.]), R(e[_],r[.]) -> R(e[_],r[1]), R(e[_],r[1])
% reaction: R(e[1],r[.]).E(r[1],s[.]) + R(e[1],r[.]).E(r[.],s[1]) -> R(e[1],r[2]).R(e[3],r[2]).E(r[.],s[1]).E(r[3],s[.])

jac(4,4)=jac(4,4)-1/2*k(4)*y(3);
jac(4,3)=jac(4,3)-1/2*k(4)*y(4);
jac(3,4)=jac(3,4)-1/2*k(4)*y(3);
jac(3,3)=jac(3,3)-1/2*k(4)*y(4);
jac(6,4)=jac(6,4)+1/2*k(4)*y(3);
jac(6,3)=jac(6,3)+1/2*k(4)*y(4);

% rule    : R(e[_],r[.]), R(e[_],r[.]) -> R(e[_],r[1]), R(e[_],r[1])
% reaction: R(e[1],r[.]).E(r[1],s[.]) + R(e[1],r[.]).E(r[.],s[1]) -> R(e[1],r[2]).R(e[3],r[2]).E(r[.],s[1]).E(r[3],s[.])

jac(4,4)=jac(4,4)-1/2*k(4)*y(3);
jac(4,3)=jac(4,3)-1/2*k(4)*y(4);
jac(3,4)=jac(3,4)-1/2*k(4)*y(3);
jac(3,3)=jac(3,3)-1/2*k(4)*y(4);
jac(6,4)=jac(6,4)+1/2*k(4)*y(3);
jac(6,3)=jac(6,3)+1/2*k(4)*y(4);

% rule    : R(e[_],r[.]) -> R(e[.],r[.])
% reaction: R(e[1],r[.]).E(r[1],s[.]) -> E(r[.],s[.]) + R(e[.],r[.])

jac(3,3)=jac(3,3)-k(3);
jac(1,3)=jac(1,3)+k(3);
jac(2,3)=jac(2,3)+k(3);

% rule    : R(r[_]) -> R(r[.])
% reaction: R(e[1],r[2]).R(e[3],r[2]).E(r[.],s[1]).E(r[.],s[3]) -> R(e[1],r[.]).E(r[.],s[1]) + R(e[1],r[.]).E(r[.],s[1])

jac(5,5)=jac(5,5)-2*k(6)/2;
jac(4,5)=jac(4,5)+k(6)/2;
jac(4,5)=jac(4,5)+k(6)/2;

% rule    : R(r[_]) -> .
% reaction: R(e[1],r[2]).R(e[3],r[2]).E(r[.],s[1]).E(r[.],s[3]) -> E(r[.],s[.]) + R(e[1],r[.]).E(r[.],s[1])

jac(5,5)=jac(5,5)-2*k(5)/2;
jac(4,5)=jac(4,5)+k(5)/2;
jac(2,5)=jac(2,5)+k(5)/2;

% rule    : R(r[_]) -> R(r[.])
% reaction: R(e[1],r[2]).R(e[3],r[2]).E(r[.],s[1]).E(r[.],s[3]) -> R(e[1],r[.]).E(r[.],s[1]) + R(e[1],r[.]).E(r[.],s[1])

jac(5,5)=jac(5,5)-2*k(6)/2;
jac(4,5)=jac(4,5)+k(6)/2;
jac(4,5)=jac(4,5)+k(6)/2;

% rule    : R(r[_]) -> .
% reaction: R(e[1],r[2]).R(e[3],r[2]).E(r[.],s[1]).E(r[.],s[3]) -> E(r[.],s[.]) + R(e[1],r[.]).E(r[.],s[1])

jac(5,5)=jac(5,5)-2*k(5)/2;
jac(4,5)=jac(4,5)+k(5)/2;
jac(2,5)=jac(2,5)+k(5)/2;

% rule    : R(e[_],r[.]), R(e[_],r[.]) -> R(e[_],r[1]), R(e[_],r[1])
% reaction: R(e[1],r[.]).E(r[.],s[1]) + R(e[1],r[.]).E(r[.],s[1]) -> R(e[1],r[2]).R(e[3],r[2]).E(r[.],s[1]).E(r[.],s[3])

jac(4,4)=jac(4,4)-1/2*k(4)*y(4);
jac(4,4)=jac(4,4)-1/2*k(4)*y(4);
jac(4,4)=jac(4,4)-1/2*k(4)*y(4);
jac(4,4)=jac(4,4)-1/2*k(4)*y(4);
jac(5,4)=jac(5,4)+2/2*k(4)*y(4);
jac(5,4)=jac(5,4)+2/2*k(4)*y(4);

% rule    : R(e[_],r[.]) -> R(e[.],r[.])
% reaction: R(e[1],r[.]).E(r[.],s[1]) -> E(r[.],s[.]) + R(e[.],r[.])

jac(4,4)=jac(4,4)-k(3);
jac(1,4)=jac(1,4)+k(3);
jac(2,4)=jac(2,4)+k(3);

% rule    : E(r[.],s[.]), R(e[.]) -> E(r[.],s[1]), R(e[1])
% reaction: E(r[.],s[.]) + R(e[.],r[.]) -> R(e[1],r[.]).E(r[.],s[1])

jac(1,1)=jac(1,1)-k(2)*y(2);
jac(1,2)=jac(1,2)-k(2)*y(1);
jac(2,1)=jac(2,1)-k(2)*y(2);
jac(2,2)=jac(2,2)-k(2)*y(1);
jac(4,1)=jac(4,1)+k(2)*y(2);
jac(4,2)=jac(4,2)+k(2)*y(1);

% rule    : E(r[.],s[.]), R(e[.]) -> E(r[1],s[.]), R(e[1])
% reaction: E(r[.],s[.]) + R(e[.],r[.]) -> R(e[1],r[.]).E(r[1],s[.])

jac(1,1)=jac(1,1)-k(1)*y(2);
jac(1,2)=jac(1,2)-k(1)*y(1);
jac(2,1)=jac(2,1)-k(1)*y(2);
jac(2,2)=jac(2,2)-k(1)*y(1);
jac(3,1)=jac(3,1)+k(1)*y(2);
jac(3,2)=jac(3,2)+k(1)*y(1);
end


function obs=ode_obs(y)

global nobs
global var
obs=zeros(nobs,1);

t = y(8);
var(2)=y(1)+y(3)+y(4); % monomers
var(1)=(y(7)+2*y(6)+y(5))/2; % dimmers

obs(1)=t; % [T]
obs(2)=var(1); % dimmers
obs(3)=var(2); % monomers

end


main();

